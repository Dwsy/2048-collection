{
  "version": 3,
  "sources": ["../../.pnpm/backbone@1.6.0/node_modules/backbone/backbone.js"],
  "sourcesContent": ["//     Backbone.js 1.6.0\n\n//     (c) 2010-2024 Jeremy Ashkenas and DocumentCloud\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global;\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch (e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, root.jQuery || root.Zepto || root.ender || root.$);\n  }\n\n})(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.6.0';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // A private global variable to share between listeners and listenees.\n  var _listening;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    this._events = eventsApi(onApi, this._events || {}, name, callback, {\n      context: context,\n      ctx: this,\n      listening: _listening\n    });\n\n    if (_listening) {\n      var listeners = this._listeners || (this._listeners = {});\n      listeners[_listening.id] = _listening;\n      // Allow the listening to use a counter, instead of tracking\n      // callbacks for library interop\n      _listening.interop = false;\n    }\n\n    return this;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo = function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = _listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = _listening = listeningTo[id] = new Listening(this, obj);\n    }\n\n    // Bind callbacks on obj.\n    var error = tryCatchOn(obj, name, callback, this);\n    _listening = void 0;\n\n    if (error) throw error;\n    // If the target obj is not Backbone.Events, track events manually.\n    if (listening.interop) listening.on(name, callback);\n\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\n    }\n    return events;\n  };\n\n  // An try-catch guarded #on function, to prevent poisoning the global\n  // `_listening` variable.\n  var tryCatchOn = function(obj, name, callback, context) {\n    try {\n      obj.on(name, callback, context);\n    } catch (e) {\n      return e;\n    }\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off = function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening = function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n      if (listening.interop) listening.off(name, callback);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var context = options.context, listeners = options.listeners;\n    var i = 0, names;\n\n    // Delete all event listeners and \"drop\" events.\n    if (!name && !context && !callback) {\n      for (names = _.keys(listeners); i < names.length; i++) {\n        listeners[names[i]].cleanup();\n      }\n      return;\n    }\n\n    names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Find any remaining events.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          var listening = handler.listening;\n          if (listening) listening.off(name, callback);\n        }\n      }\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n\n    return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once = function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, this.off.bind(this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce = function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, this.stopListening.bind(this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger = function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // A listening class that tracks and cleans up memory bindings\n  // when all callbacks have been offed.\n  var Listening = function(listener, obj) {\n    this.id = listener._listenId;\n    this.listener = listener;\n    this.obj = obj;\n    this.interop = true;\n    this.count = 0;\n    this._events = void 0;\n  };\n\n  Listening.prototype.on = Events.on;\n\n  // Offs a callback (or several).\n  // Uses an optimized counter if the listenee uses Backbone.Events.\n  // Otherwise, falls back to manual tracking to support events\n  // library interop.\n  Listening.prototype.off = function(name, callback) {\n    var cleanup;\n    if (this.interop) {\n      this._events = eventsApi(offApi, this._events, name, callback, {\n        context: void 0,\n        listeners: void 0\n      });\n      cleanup = !this._events;\n    } else {\n      this.count--;\n      cleanup = this.count === 0;\n    }\n    if (cleanup) this.cleanup();\n  };\n\n  // Cleans up memory bindings between the listener and the listenee.\n  Listening.prototype.cleanup = function() {\n    delete this.listener._listeningTo[this.obj._listenId];\n    if (!this.interop) delete this.obj._listeners[this.id];\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    var defaults = _.result(this, 'defaults');\n\n    // Just _.defaults would work fine, but the additional _.extends\n    // is in there for historical reasons. See #3843.\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Model.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      if (this.idAttribute in attrs) {\n        var prevId = this.id;\n        this.id = this.get(this.idAttribute);\n        this.trigger('changeId', this, prevId, options);\n      }\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      var hasChanged;\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n        hasChanged = true;\n      }\n      return hasChanged ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : options.patch ? 'patch' : 'update';\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend({}, options, {validate: true}));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Collection.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed.length) {\n        options.changes = {added: [], merged: [], removed: removed};\n        this.trigger('update', this, options);\n      }\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.extend({}, setOptions, options);\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model, i;\n      for (i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] ||\n        this._byId[this.modelId(this._isModel(obj) ? obj.attributes : obj, obj.idAttribute)] ||\n        obj.cid && this._byId[obj.cid];\n    },\n\n    // Returns `true` if the model is in the collection.\n    has: function(obj) {\n      return this.get(obj) != null;\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = comparator.bind(this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return this.map(attr + '');\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(m, resp, callbackOpts) {\n        if (wait) {\n          m.off('error', collection._forwardPristineError, collection);\n          collection.add(m, callbackOpts);\n        }\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n      // In case of wait:true, our collection is not listening to any\n      // of the model's events yet, so it will not forward the error\n      // event. In this special case, we need to listen for it\n      // separately and handle the event just once.\n      // (The reason we don't need to do this for the sync event is\n      // in the success handler above: we add the model first, which\n      // causes the collection to listen, and then invoke the callback\n      // that triggers the event.)\n      if (wait) {\n        model.once('error', this._forwardPristineError, this);\n      }\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function(attrs, idAttribute) {\n      return attrs[idAttribute || this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Get an iterator of all models in this collection.\n    values: function() {\n      return new CollectionIterator(this, ITERATOR_VALUES);\n    },\n\n    // Get an iterator of all model IDs in this collection.\n    keys: function() {\n      return new CollectionIterator(this, ITERATOR_KEYS);\n    },\n\n    // Get an iterator of all [ID, model] tuples in this collection.\n    entries: function() {\n      return new CollectionIterator(this, ITERATOR_KEYSVALUES);\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n\n      var model;\n      if (this.model.prototype) {\n        model = new this.model(attrs, options);\n      } else {\n        // ES class methods didn't have prototype\n        model = this.model(attrs, options);\n      }\n\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes, model.idAttribute);\n        if (id != null) delete this._byId[id];\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      if (models.length > 0 && !options.silent) delete options.index;\n      return removed;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function(model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes, model.idAttribute);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes, model.idAttribute);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n        if (event === 'changeId') {\n          var prevId = this.modelId(model.previousAttributes(), model.idAttribute);\n          var id = this.modelId(model.attributes, model.idAttribute);\n          if (prevId != null) delete this._byId[prevId];\n          if (id != null) this._byId[id] = model;\n        }\n      }\n      this.trigger.apply(this, arguments);\n    },\n\n    // Internal callback method used in `create`. It serves as a\n    // stand-in for the `_onModelEvent` method, which is not yet bound\n    // during the `wait` period of the `create` call. We still want to\n    // forward any `'error'` event at the end of the `wait` period,\n    // hence a customized callback.\n    _forwardPristineError: function(model, collection, options) {\n      // Prevent double forward if the model was already in the\n      // collection before the call to `create`.\n      if (this.has(model)) return;\n      this._onModelEvent('error', model, collection, options);\n    }\n  });\n\n  // Defining an @@iterator method implements JavaScript's Iterable protocol.\n  // In modern ES2015 browsers, this value is found at Symbol.iterator.\n  /* global Symbol */\n  var $$iterator = typeof Symbol === 'function' && Symbol.iterator;\n  if ($$iterator) {\n    Collection.prototype[$$iterator] = Collection.prototype.values;\n  }\n\n  // CollectionIterator\n  // ------------------\n\n  // A CollectionIterator implements JavaScript's Iterator protocol, allowing the\n  // use of `for of` loops in modern browsers and interoperation between\n  // Backbone.Collection and other JavaScript functions and third-party libraries\n  // which can operate on Iterables.\n  var CollectionIterator = function(collection, kind) {\n    this._collection = collection;\n    this._kind = kind;\n    this._index = 0;\n  };\n\n  // This \"enum\" defines the three possible kinds of values which can be emitted\n  // by a CollectionIterator that correspond to the values(), keys() and entries()\n  // methods on Collection, respectively.\n  var ITERATOR_VALUES = 1;\n  var ITERATOR_KEYS = 2;\n  var ITERATOR_KEYSVALUES = 3;\n\n  // All Iterators should themselves be Iterable.\n  if ($$iterator) {\n    CollectionIterator.prototype[$$iterator] = function() {\n      return this;\n    };\n  }\n\n  CollectionIterator.prototype.next = function() {\n    if (this._collection) {\n\n      // Only continue iterating if the iterated collection is long enough.\n      if (this._index < this._collection.length) {\n        var model = this._collection.at(this._index);\n        this._index++;\n\n        // Construct a value depending on what kind of values should be iterated.\n        var value;\n        if (this._kind === ITERATOR_VALUES) {\n          value = model;\n        } else {\n          var id = this._collection.modelId(model.attributes, model.idAttribute);\n          if (this._kind === ITERATOR_KEYS) {\n            value = id;\n          } else { // ITERATOR_KEYSVALUES\n            value = [id, model];\n          }\n        }\n        return {value: value, done: false};\n      }\n\n      // Once exhausted, remove the reference to the collection so future\n      // calls to the next method always return done.\n      this._collection = void 0;\n    }\n\n    return {value: void 0, done: true};\n  };\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    this.preinitialize.apply(this, arguments);\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the View\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], method.bind(this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(base, length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return base[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return base[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return base[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return base[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return base[method].apply(base, args);\n      };\n    }\n  };\n\n  var addUnderscoreMethods = function(Class, base, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (base[method]) Class.prototype[method] = addMethod(base, length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\n    foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\n    select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n    contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n    head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n    without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n    isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n    sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\n\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n    omit: 0, chain: 1, isEmpty: 1};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n\n  _.each([\n    [Collection, collectionMethods, 'models'],\n    [Model, modelMethods, 'attributes']\n  ], function(config) {\n    var Base = config[0],\n        methods = config[1],\n        attribute = config[2];\n\n    Base.mixin = function(obj) {\n      var mappings = _.reduce(_.functions(obj), function(memo, name) {\n        memo[name] = 0;\n        return memo;\n      }, {});\n      addUnderscoreMethods(Base, obj, mappings, attribute);\n    };\n\n    addUnderscoreMethods(Base, _, methods, attribute);\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Router.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n      .replace(optionalParam, '(?:$1)?')\n      .replace(namedParam, function(match, optional) {\n        return optional ? match : '([^/?]+)';\n      })\n      .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = this.checkUrl.bind(this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._trailingSlash   = this.options.trailingSlash;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function(eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function(eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) {\n        if (!this.matchRoot()) return this.notfound();\n        return false;\n      }\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return this.notfound();\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      }) || this.notfound();\n    },\n\n    // When no route could be matched, this method is called internally to\n    // trigger the `'notfound'` event. It returns `false` so that it can be used\n    // in tail position.\n    notfound: function() {\n      this.trigger('notfound');\n      return false;\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Strip trailing slash on the root unless _trailingSlash is true\n      var rootPath = this.root;\n      if (!this._trailingSlash && (fragment === '' || fragment.charAt(0) === '?')) {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n      var url = rootPath + fragment;\n\n      // Strip the fragment of the query and hash for matching.\n      fragment = fragment.replace(pathStripper, '');\n\n      // Decode for matching.\n      var decodedFragment = this.decodeFragment(fragment);\n\n      if (this.fragment === decodedFragment) return;\n      this.fragment = decodedFragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  // Provide useful information when things go wrong. This method is not meant\n  // to be used directly; it merely provides the necessary introspection for the\n  // external `debugInfo` function.\n  Backbone._debug = function() {\n    return {root: root, _: _};\n  };\n\n  return Backbone;\n});\n"],
  "mappings": "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",
  "names": ["_", "$", "exports", "xhr", "window"]
}
